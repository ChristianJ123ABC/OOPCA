/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package healthapp;

import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author flips
 */
public class MentalGUI extends javax.swing.JFrame {
    private ArrayList<Mental> mentalG;


    /**
     * Creates new form MentalGUI
     */
    public MentalGUI() {
        initComponents();
        frequencyLbl.setVisible(false);
        frequencyTf.setVisible(false);
        weightLbl.setVisible(false);
        weightTf.setVisible(false);
        metLbl.setVisible(false);
        metTf.setVisible(false);
        activityDLbl.setVisible(false);
        activityDTf.setVisible(false);
        dietTypeLbl.setVisible(false);
        dietTTf.setVisible(false);
        caloriesLbl.setVisible(false);
        caloriesTf.setVisible(false);
         mentalG = new ArrayList<>();
         read();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mBtnGrp = new javax.swing.ButtonGroup();
        mentalLbl = new javax.swing.JLabel();
        dietTypeLbl = new javax.swing.JLabel();
        IdTf = new javax.swing.JTextField();
        caloriesBBtn = new javax.swing.JButton();
        menuMBtn = new javax.swing.JButton();
        displayMBtn = new javax.swing.JButton();
        removeMBtn = new javax.swing.JButton();
        addBtn = new javax.swing.JButton();
        caloriesLbl = new javax.swing.JLabel();
        IdLbl = new javax.swing.JLabel();
        frequencyLbl = new javax.swing.JLabel();
        metLbl = new javax.swing.JLabel();
        activityDLbl = new javax.swing.JLabel();
        stressLbl = new javax.swing.JLabel();
        sleepHLbl = new javax.swing.JLabel();
        frequencyTf = new javax.swing.JTextField();
        stressTf = new javax.swing.JTextField();
        activityDTf = new javax.swing.JTextField();
        metTf = new javax.swing.JTextField();
        dietTTf = new javax.swing.JTextField();
        caloriesTf = new javax.swing.JTextField();
        sleepHTf = new javax.swing.JTextField();
        activitiesMBtn = new javax.swing.JButton();
        dietMBtn = new javax.swing.JButton();
        activitiesRB = new javax.swing.JRadioButton();
        dietRb = new javax.swing.JRadioButton();
        weightLbl = new javax.swing.JLabel();
        weightTf = new javax.swing.JTextField();
        clearMBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        mentalLbl.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        mentalLbl.setText("Mental Wellbeing");

        dietTypeLbl.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        dietTypeLbl.setText("Diet Type:");

        IdTf.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        IdTf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IdTfActionPerformed(evt);
            }
        });

        caloriesBBtn.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        caloriesBBtn.setText("Calories Burned");
        caloriesBBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                caloriesBBtnMouseClicked(evt);
            }
        });
        caloriesBBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                caloriesBBtnActionPerformed(evt);
            }
        });

        menuMBtn.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        menuMBtn.setText("Menu");
        menuMBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuMBtnActionPerformed(evt);
            }
        });

        displayMBtn.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        displayMBtn.setText("Display");
        displayMBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayMBtnActionPerformed(evt);
            }
        });

        removeMBtn.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        removeMBtn.setText("Remove");
        removeMBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeMBtnActionPerformed(evt);
            }
        });

        addBtn.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        addBtn.setText("Add");
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });

        caloriesLbl.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        caloriesLbl.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        caloriesLbl.setText("Calories:");

        IdLbl.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        IdLbl.setText("Id:");

        frequencyLbl.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        frequencyLbl.setText("Frequency:");

        metLbl.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        metLbl.setText("Met:");

        activityDLbl.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        activityDLbl.setText("Activity Duration:");

        stressLbl.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        stressLbl.setText("Stress Level:");

        sleepHLbl.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        sleepHLbl.setText("Sleep Hours:");

        frequencyTf.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        frequencyTf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                frequencyTfActionPerformed(evt);
            }
        });

        stressTf.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        stressTf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stressTfActionPerformed(evt);
            }
        });

        activityDTf.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        activityDTf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                activityDTfActionPerformed(evt);
            }
        });

        metTf.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        metTf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                metTfActionPerformed(evt);
            }
        });

        dietTTf.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        dietTTf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dietTTfActionPerformed(evt);
            }
        });
        dietTTf.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                dietTTfKeyReleased(evt);
            }
        });

        caloriesTf.setEditable(false);
        caloriesTf.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        caloriesTf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                caloriesTfActionPerformed(evt);
            }
        });

        sleepHTf.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        sleepHTf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sleepHTfActionPerformed(evt);
            }
        });

        activitiesMBtn.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        activitiesMBtn.setText("Types Of Activity");
        activitiesMBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                activitiesMBtnActionPerformed(evt);
            }
        });

        dietMBtn.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        dietMBtn.setText("Types Of Diet");

        mBtnGrp.add(activitiesRB);
        activitiesRB.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        activitiesRB.setText("Activities");
        activitiesRB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                activitiesRBActionPerformed(evt);
            }
        });

        mBtnGrp.add(dietRb);
        dietRb.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        dietRb.setText("Diet");
        dietRb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dietRbActionPerformed(evt);
            }
        });

        weightLbl.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        weightLbl.setText("Weight:");

        weightTf.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        clearMBtn.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        clearMBtn.setText("Clear");
        clearMBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearMBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(IdLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(frequencyLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(13, 13, 13))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(dietTypeLbl, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE)
                            .addComponent(caloriesLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(frequencyTf, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(IdTf, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(activityDTf, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(metTf, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dietTTf, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(caloriesTf, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 213, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(activitiesRB, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dietRb, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(115, 115, 115))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(activityDLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(229, 229, 229)
                        .addComponent(mentalLbl))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(metLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(stressLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(stressTf, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(activitiesMBtn)
                                .addGap(18, 18, 18)
                                .addComponent(dietMBtn))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(sleepHLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(sleepHTf, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(weightLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(weightTf, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                .addComponent(addBtn)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(displayMBtn)
                                                .addGap(18, 18, 18)
                                                .addComponent(removeMBtn)))
                                        .addGap(18, 18, 18)
                                        .addComponent(clearMBtn)))))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(caloriesBBtn))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(menuMBtn)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mentalLbl)
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(IdLbl)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(IdTf, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(activitiesRB)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(frequencyLbl)
                    .addComponent(frequencyTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dietRb))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(metLbl)
                    .addComponent(metTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(activityDLbl)
                    .addComponent(activityDTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dietTTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dietTypeLbl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(caloriesTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(caloriesLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(stressTf, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(stressLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sleepHLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sleepHTf, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(weightLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(weightTf, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addBtn)
                    .addComponent(displayMBtn)
                    .addComponent(removeMBtn)
                    .addComponent(menuMBtn)
                    .addComponent(clearMBtn))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dietMBtn)
                    .addComponent(activitiesMBtn)
                    .addComponent(caloriesBBtn))
                .addGap(35, 35, 35))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void menuMBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuMBtnActionPerformed
        // TODO add your handling code here:
        UserGUI mg = new UserGUI();
        mg.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_menuMBtnActionPerformed

    private void caloriesBBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_caloriesBBtnActionPerformed
        // TODO add your handling code here:
     
        
    }//GEN-LAST:event_caloriesBBtnActionPerformed

    private void IdTfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IdTfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_IdTfActionPerformed

    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
        // TODO add your handling code here:
        if(activitiesRB.isSelected()){
            MentalActivity a = new MentalActivity();
            a.setId(IdTf.getText());
            a.setStressLevel(stressTf.getText());
            a.setSleepHours(sleepHTf.getText());
            a.setWeight (Double.parseDouble(weightTf.getText()));
            a.setFrequency (Double.parseDouble(frequencyTf.getText()));
            a.setMet(Double.parseDouble(metTf.getText()));
            a.setDuration(Double.parseDouble(activityDTf.getText()));
            mentalG.add(a);
        }
        else if(dietRb.isSelected()){
            MentalDiet d = new MentalDiet();
            d.setId(IdTf.getText());
            d.setStressLevel(stressTf.getText());
            d.setSleepHours(sleepHTf.getText());
            d.setDietType (dietTTf.getText());
            d.setCalories (Double.parseDouble(caloriesTf.getText()));
            mentalG.add(d);
        }
          clearFields();
        
    }//GEN-LAST:event_addBtnActionPerformed

    private void displayMBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayMBtnActionPerformed
        // TODO add your handling code here:
          if(mentalG.isEmpty()){
            JOptionPane.showMessageDialog(null,"Sorry, there are no information in the system");
        }
        else{
            //traversing an ArrayList
            for(int i = 0; i < mentalG.size();i++){
                JOptionPane.showMessageDialog(null,mentalG.get(i).getDetails());
            }
        }
       read();
    }//GEN-LAST:event_displayMBtnActionPerformed

    private void removeMBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeMBtnActionPerformed
        // TODO add your handling code here:
         if(mentalG.isEmpty()){
            JOptionPane.showMessageDialog(null,"Sorry, there are no information in the system");
        }
        else{
            String searchTerm = IdTf.getText();
            for(int i = 0; i < mentalG.size();i++){
                Mental m = mentalG.get(i);
                if(m.getId().equalsIgnoreCase(searchTerm)){
                    mentalG.remove(m);
                }
            }
        }
        clearFields();
        read();
    }//GEN-LAST:event_removeMBtnActionPerformed

    private void frequencyTfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_frequencyTfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_frequencyTfActionPerformed

    private void stressTfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stressTfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_stressTfActionPerformed

    private void activityDTfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_activityDTfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_activityDTfActionPerformed

    private void metTfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_metTfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_metTfActionPerformed

    private void caloriesTfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_caloriesTfActionPerformed
        // TODO add your handling code here:
      
    }//GEN-LAST:event_caloriesTfActionPerformed

    private void sleepHTfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sleepHTfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sleepHTfActionPerformed

    private void activitiesRBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_activitiesRBActionPerformed
        // TODO add your handling code here:
        dietTypeLbl.setVisible(false);
        dietTTf.setVisible(false);
        caloriesLbl.setVisible(false);
        caloriesTf.setVisible(false);
        frequencyLbl.setVisible(true);
        frequencyTf.setVisible(true);
        metLbl.setVisible(true);
        metTf.setVisible(true);
        activityDLbl.setVisible(true);
        activityDTf.setVisible(true);
        
        
    }//GEN-LAST:event_activitiesRBActionPerformed

    private void dietRbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dietRbActionPerformed
        // TODO add your handling code here:
        frequencyLbl.setVisible(false);
        frequencyTf.setVisible(false);
        metLbl.setVisible(false);
        metTf.setVisible(false);
        activityDLbl.setVisible(false);
        activityDTf.setVisible(false);
        dietTypeLbl.setVisible(true);
        dietTTf.setVisible(true);
        caloriesLbl.setVisible(true);
        caloriesTf.setVisible(true);
    }//GEN-LAST:event_dietRbActionPerformed

    private void caloriesBBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_caloriesBBtnMouseClicked
        // TODO add your handling code here:
        //    if(caloriesBBtn.onClick()){
        //    JOptionPane.showMessageDialog(null,"Sorry, there are no details in the system to calculate caloried burned");
      //  }
      //  else{
            //traversing an ArrayList
       //     for(int i = 0; i < mentalG.size();i++){
       //         JOptionPane.showMessageDialog(null,"Calories Burned: "+caloriesBurned);
      //      }
      //  }
    }//GEN-LAST:event_caloriesBBtnMouseClicked

    private void activitiesMBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_activitiesMBtnActionPerformed
        // TODO add your handling code here:
      //  JOptionPane.showMessageDialog(null,);
    }//GEN-LAST:event_activitiesMBtnActionPerformed

    private void dietTTfKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dietTTfKeyReleased
        // TODO add your handling code here:
           String input = dietTTf.getText().toLowerCase();
        // Check for specific diet type keywords
                switch (input) {
                    case "chicken":
                        caloriesTf.setText("200 kcal");
                        break;
                    case "beef":
                        caloriesTf.setText("250 kcal");
                        break;
                    case "salad":
                        caloriesTf.setText("50 kcal");
                        break;
                    default:
                        caloriesTf.setText("Unknown");
                        break;
                        
                }  
    }//GEN-LAST:event_dietTTfKeyReleased

    private void dietTTfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dietTTfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dietTTfActionPerformed

    private void clearMBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearMBtnActionPerformed
        // TODO add your handling code here:
        clearFields();
    }//GEN-LAST:event_clearMBtnActionPerformed

  
    
    
    private void read(){
        //declare objects
        File f;
        FileInputStream fStream;
        ObjectInputStream oStream;
        
        try{
            //create objects
            f = new File("user.dat");
            fStream = new FileInputStream(f);
            oStream = new ObjectInputStream(fStream);
            
            //use objects
            mentalG = (ArrayList<Mental>)oStream.readObject();
            
            oStream.close();
        }
        catch(IOException|ClassNotFoundException e){
            System.out.println("Error:"+e);
        }
    }
    
    
      private void clearFields(){
        IdTf.setText(" ");
        stressTf.setText(" ");
        sleepHTf.setText(" ");
        weightTf.setText(" ");
        frequencyTf.setText(" ");
        activityDTf.setText(" ");
        dietTTf.setText(" ");
        caloriesTf.setText(" ");
    
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MentalGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MentalGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MentalGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MentalGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MentalGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel IdLbl;
    private javax.swing.JTextField IdTf;
    private javax.swing.JButton activitiesMBtn;
    private javax.swing.JRadioButton activitiesRB;
    private javax.swing.JLabel activityDLbl;
    private javax.swing.JTextField activityDTf;
    private javax.swing.JButton addBtn;
    private javax.swing.JButton caloriesBBtn;
    private javax.swing.JLabel caloriesLbl;
    private javax.swing.JTextField caloriesTf;
    private javax.swing.JButton clearMBtn;
    private javax.swing.JButton dietMBtn;
    private javax.swing.JRadioButton dietRb;
    private javax.swing.JTextField dietTTf;
    private javax.swing.JLabel dietTypeLbl;
    private javax.swing.JButton displayMBtn;
    private javax.swing.JLabel frequencyLbl;
    private javax.swing.JTextField frequencyTf;
    private javax.swing.ButtonGroup mBtnGrp;
    private javax.swing.JLabel mentalLbl;
    private javax.swing.JButton menuMBtn;
    private javax.swing.JLabel metLbl;
    private javax.swing.JTextField metTf;
    private javax.swing.JButton removeMBtn;
    private javax.swing.JLabel sleepHLbl;
    private javax.swing.JTextField sleepHTf;
    private javax.swing.JLabel stressLbl;
    private javax.swing.JTextField stressTf;
    private javax.swing.JLabel weightLbl;
    private javax.swing.JTextField weightTf;
    // End of variables declaration//GEN-END:variables
}
